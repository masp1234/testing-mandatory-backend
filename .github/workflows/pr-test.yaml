name: Pull Request Test

on:
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 123123
          MYSQL_DATABASE: test_addresses
        ports:
          - 3306:3306

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Run Unit Tests
        run: dotnet test testing-mandatory-backend.Tests/testing-mandatory-backend.Tests.csproj --filter Category="Unit" --verbosity minimal

      - name: Seed Database
        run: mysql -h 127.0.0.1 -u root -p123123 test_addresses < ./testing-mandatory-backend/Scripts/test-addresses.sql

      - name: Run Integration Tests
        run: dotnet test testing-mandatory-backend.Tests/testing-mandatory-backend.Tests.csproj --filter Category="Integration" --verbosity minimal

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Fetch Postman Collection
        run: |
          curl --request GET \
            --url https://api.getpostman.com/collections/${{ secrets.TEST_COLLECTION_ID }} \
            --header "X-Api-Key: ${{ secrets.POSTMAN_API_KEY }}" \
            --output TestingMandatory.postman_collection.json


      - name: Install Newman
        run: |
          npm i -g newman \
          && npm install -g newman-reporter-htmlextra

      - name: Run Postman Collection
        run: |
          newman run TestingMandatory.postman_collection.json \
          -r htmlextra --reporter-htmlextra-export postmanTestResults/htmlreport.html

      - name: Upload Postman test results
        uses: actions/upload-artifact@v4
        with:
          name: RunReports
          path: postmanTestResults
